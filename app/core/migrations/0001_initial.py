# Generated by Django 5.1.7 on 2025-03-19 11:00

import app.core.models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ArtistProfile',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_of_birth', models.DateField(blank=True, null=True, validators=[app.core.models.validate_date], verbose_name='Date of Birth')),
                ('gender', models.CharField(choices=[('male', 'male'), ('female', 'female'), ('other', 'other')], default='male', max_length=10, verbose_name='Gender')),
                ('address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Full Address')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('first_release_year', models.PositiveIntegerField(blank=True, null=True, verbose_name='First Release Year')),
                ('no_of_albums_released', models.PositiveIntegerField(default=0, verbose_name='Number of Albums Released')),
            ],
            options={
                'verbose_name': 'Artist Profile',
            },
        ),
        migrations.CreateModel(
            name='Music',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('album_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Album Name')),
                ('release_date', models.DateTimeField(blank=True, null=True, verbose_name='Release Date')),
                ('genre', models.CharField(choices=[('rnb', 'rnb'), ('country', 'country'), ('classic', 'classic'), ('rock', 'rock'), ('jazz', 'jazz'), ('pop', 'pop')], default='rnb', max_length=20, verbose_name='Genre')),
            ],
            options={
                'verbose_name': 'Music',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='Email Address')),
                ('password', models.CharField(max_length=255, verbose_name='Password')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Is Staff?')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active?')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='Joined Date')),
                ('role', models.CharField(choices=[('artist', 'artist'), ('artist_manager', 'artist_manager'), ('super_admin', 'super_admin')], default='artist', max_length=20, verbose_name='Role')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
            },
        ),
        migrations.CreateModel(
            name='MusicArtists',
            fields=[
                ('id', model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='artist_music_relations', to='core.artistprofile')),
                ('music', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='music_artist_relations', to='core.music')),
            ],
            options={
                'verbose_name': 'Music Artist',
                'verbose_name_plural': 'Music Artists',
                'db_table': 'core_music_artists',
            },
        ),
        migrations.AddField(
            model_name='music',
            name='artists',
            field=models.ManyToManyField(related_name='musics', through='core.MusicArtists', to='core.artistprofile'),
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_of_birth', models.DateField(blank=True, null=True, validators=[app.core.models.validate_date], verbose_name='Date of Birth')),
                ('gender', models.CharField(choices=[('male', 'male'), ('female', 'female'), ('other', 'other')], default='male', max_length=10, verbose_name='Gender')),
                ('address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Full Address')),
                ('first_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='First Name')),
                ('last_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Last Name')),
                ('phone', models.CharField(blank=True, max_length=15, null=True, verbose_name='Phone Number')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Profile',
            },
        ),
    ]
